1 加载

1.1 请求 roster
<iq from='juliet@example.com/balcony'
    id='bv1bs71f'
    type='get'>
  <query xmlns='jabber:iq:roster'/>
</iq>

1.2 请求 roster 成功
<iq id='bv1bs71f'
	to='juliet@example.com/balcony'
	type='result'>
  <query xmlns='jabber:iq:roster' ver='ver11'>
    <item jid='romeo@example.net' name='Romeo' subscription='both'>
      <group>Friends</group>
    </item>
    <item jid='mercutio@example.com' name='Mercutio' subscription='from'/>
    <item jid='benvolio@example.net' name='Benvolio' subscription='both'/>
  </query>
</iq>

1.3 如果 roster 里没有联系人
<iq id='bv1bs71f'
	to='juliet@example.com/chamber'
	type='result'>
  <query xmlns='jabber:iq:roster' ver='ver7'/>
</iq>

1.4 如果 roster 不存在，服务器必须返回节错误，这个节错误应该是 <item-not-found/>
<iq id='bv1bs71f'
	to='juliet@example.com/chamber'
	type='error'>
  <error type='cancel'>
	<item-not-found xmlns='urn:ietf:params:xml:ns:xmpp-stanzas'/>
  </error>
</iq>


2 添加

2.1 添加请求
<iq from='juliet@example.com/balcony'
    id='ph1xaz53'
    type='set'>
  <query xmlns='jabber:iq:roster'>
    <item jid='nurse@example.com' name='Nurse'>
      <group>Servants</group>
    </item>
  </query>
</iq>

2.2 添加成功
先返回成功
<iq id='ph1xaz53'
    to='juliet@example.com/balcony'
    type='result'/>
再返回新的 item
<iq to='juliet@example.com/balcony'
    id='a78b4q6ha463'
    type='set'>
  <query xmlns='jabber:iq:roster' ver='ver13'>
	<item jid='nurse@example.com' name='Nurse' subscription='none'>
      <group>Servants</group>
    </item>
  </query>
</iq>

<iq to='juliet@example.com/chamber'
    id='x81g3bdy4n19'
    type='set'>
  <query xmlns='jabber:iq:roster' ver='ver13'>
    <item jid='nurse@example.com' name='Nurse' subscription='none'>
      <group>Servants</group>
    </item>
  </query>
</iq>
建议在收到 roster push 时作相应回复
<iq from='juliet@example.com/balcony'
    id='a78b4q6ha463'
    type='result'/>

<iq from='juliet@example.com/chamber'
    id='x81g3bdy4n19'
    type='result'/>

2.3 添加失败


3 更新


4 删除

4.1 删除请求
<iq from='juliet@example.com/balcony'
    id='hm4hs97y'
    type='set'>
  <query xmlns='jabber:iq:roster'>
    <item jid='nurse@example.com' subscription='remove'/>
  </query>
</iq>

4.2 删除成功
发送一个 subscription 为 remove 的 roster push
服务器还会生成一些 presence 节点
  1 如果 subscribe，则发送 unsubscribe，用来取消订阅用户
  2 如果 subscribed，则发送 ubsubscribed，用来取消用户对自己的订阅
  3 如果 both，则发送两者

4.3 删除失败

